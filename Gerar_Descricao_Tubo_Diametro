Sub Main()
    Dim mat As String = iProperties.Material()
    Dim diametro As Double = DIAMETRO
    Dim espessura As Double = ESPESSURA
    Dim comprimento As Double = COMPRIMENTO

    If Not ValidarParametros(diametro, espessura, comprimento, mat) Then
        MessageBox.Show("Parâmetros inválidos para descrição do tubo bitola!", "Erro", MessageBoxButtons.OK, MessageBoxIcon.Warning)
        Exit Sub
    End If

    Dim desc As String = MontarDescricaoTuboBitola(diametro, espessura, comprimento, mat)
    iProperties.Value("Project", "Description") = desc
    iProperties.Value("Project", "Part Number") = desc
End Sub

Private Function ValidarParametros(diam As Double, esp As Double, comp As Double, mat As String) As Boolean
    If diam <= 0 Or esp <= 0 Or comp <= 0 Then Return False
    If String.IsNullOrWhiteSpace(mat) Then Return False
    Return True
End Function

Private Function MontarDescricaoTuboBitola(diam As Double, esp As Double, comp As Double, mat As String) As String
    Dim diamPol As Double = Round(diam / 25.4, 2)
    Dim diamTexto As String = Replace(diamPol, ",", ".") & """"
    Dim comprimentoInt As Integer = Round(comp)
    Return $"TUBO {diamTexto} × {esp} | {mat.ToUpperInvariant()} | COMP. {comprimentoInt} mm"
End Function
